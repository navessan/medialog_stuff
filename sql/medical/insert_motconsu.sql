DECLARE @PATIENTS_ID as INT
	,@MEDECINS_ID as INT
	,@CURRENT_USER as int
	,@MOTCONSU_ID int
	,@DATE_CONSULTATION datetime
	,@DATA_ID int
	,@MODELS_ID int
	,@FM_DEP_ID int
	,@MEDDEP_ID int
	,@LEHAHIJ_VRAH int
	,@MOTCONSU_EV_ID int
	
declare @ERRNO   int, @ERRMSG  varchar(255)	
	
select @MEDECINS_ID=787	/* :%AF_CURRENT_MEDECIN */	
	,@CURRENT_USER=787	/* :%AF_CURRENT_MEDECIN */
	,@MODELS_ID=486		-- Тип записи 
	,@FM_DEP_ID=20		-- Отделение стационар
	,@MEDDEP_ID=3089	/* :%AF_CURRENT_DEP_SPECIALISATION */	/* Отделение, привязанное к пользователю */
	,@DATE_CONSULTATION=GETDATE()


if(@MEDECINS_ID is null or @MEDDEP_ID is null)
     select @ERRNO = 50001, @ERRMSG  ='@MEDECINS_ID is null or @MEDDEP_ID is null!'
if(@ERRNO>0)
     raiserror @ERRNO @ERRMSG 

DECLARE cur CURSOR FOR
-------------------------
/*
SELECT
 PATIENTS.PATIENTS_ID, (cast((PATIENTS.NOM + ' ' + PATIENTS.PRENOM + ' ' + PATIENTS.PATRONYME) AS VARCHAR(100))) patient, PATIENTS.NE_LE, HO_BED.LABEL, HO_ROOM.LABEL HO_ROOM_LABEL, 
 HO_BED_TYPE.LABEL HO_BED_TYPE_LABEL, HO_RESERV.MOTCONSU_ID, HO_RESERV.ARRIVE_DATE, HO_RESERV.PLANNED_TO_DATE
FROM
 PATIENTS PATIENTS JOIN HO_RESDET HO_RESDET ON PATIENTS.PATIENTS_ID = HO_RESDET.PATIENTS_ID 
 JOIN HO_RESERV HO_RESERV ON HO_RESERV.HO_RESERV_ID = HO_RESDET.HO_RESERV_ID 
 JOIN HO_RESDET_BEDS HO_RESDET_BEDS ON HO_RESDET.HO_RESDET_ID = HO_RESDET_BEDS.HO_RESDET_ID 
 JOIN HO_BED HO_BED ON HO_BED.HO_BED_ID = HO_RESDET_BEDS.HO_BED_ID 
 JOIN HO_ROOM HO_ROOM ON HO_ROOM.HO_ROOM_ID = HO_BED.HO_ROOM_ID 
 JOIN HO_BED_TYPE HO_BED_TYPE ON HO_BED_TYPE.HO_BED_TYPE_ID = HO_BED.HO_BED_TYPE_ID 
WHERE
 (HO_RESERV.RES_STATE='D' and
 HO_BED_TYPE.HO_BED_TYPE_ID not in (3))
 */
-------------------------
SELECT 
 PATIENTS_ID
FROM
 PATIENTS
WHERE
PATIENTS_ID in(1,5962)
-------------------------
OPEN Cur;
FETCH NEXT FROM Cur into @PATIENTS_ID;
WHILE @@FETCH_STATUS = 0
   BEGIN
--------------------------
if not exists(
select MOTCONSU.MOTCONSU_ID from MOTCONSU 
join DATA_DOCTOR_IN_CHARGE DATA on DATA.MOTCONSU_ID=MOTCONSU.MOTCONSU_ID
where MOTCONSU.PATIENTS_ID=@PATIENTS_ID and
DATEDIFF(d,0,MOTCONSU.DATE_CONSULTATION)=DATEDIFF(d,0,@DATE_CONSULTATION)
)
begin

select
@DATE_CONSULTATION=GETDATE()
,@LEHAHIJ_VRAH=null
,@MOTCONSU_EV_ID=null

/* поиск последней отрытой госпитализации */
SELECT top 1 @MOTCONSU_EV_ID=MOTCONSU_ID
FROM
 MOTCONSU
WHERE
 MOTCONSU.EV_NAME <> '' and
 MOTCONSU.EV_CLOSE=0 and EV_GOSP=1 and
 MOTCONSU.PATIENTS_ID=@PATIENTS_ID
order by DATE_CONSULTATION desc

/* создание новой записи в ЭМК */
exec up_get_id  @KeyName = 'MOTCONSU', @Shift = 1, @ID = @MOTCONSU_ID output
--select @MOTCONSU_ID Result

insert into MOTCONSU
(MOTCONSU_ID,PATIENTS_ID
,DATE_CONSULTATION
,MODIFY_DATE_TIME,CREATE_DATE_TIME
,MODELS_ID,FM_DEP_ID
,MEDECINS_ID,MEDECINS_CREATE_ID
,MEDECINS_MODIFY_ID,KRN_CREATE_USER_ID
,MEDDEP_ID
,REC_STATUS,PUBLISHED,CHANGED
,EV_GOSP,EV_CLOSE
,MOTCONSU_EV_ID
)
values
(@MOTCONSU_ID,@PATIENTS_ID
,@DATE_CONSULTATION
,GetDate(),GetDate()
,@MODELS_ID,@FM_DEP_ID
,@MEDECINS_ID,@MEDECINS_ID
,@MEDECINS_ID,@MEDECINS_ID
,@MEDDEP_ID
,'W',0,0
,0,0
,@MOTCONSU_EV_ID
)

--select * from motconsu where MOTCONSU_ID=@MOTCONSU_ID

/* поиск предыдущего лечащего врача */
select top 1 
@LEHAHIJ_VRAH=LEHAHIJ_VRAH 
from DATA_DOCTOR_IN_CHARGE 
where PATIENTS_ID=@PATIENTS_ID 
order by DATE_CONSULTATION desc

/* добавление записи в таблицу лечащий врач */
exec up_get_id  @KeyName = 'DATA_DOCTOR_IN_CHARGE', @Shift = 1, @ID = @DATA_ID output
--select @DATA_ID Result

insert into DATA_DOCTOR_IN_CHARGE
(DATA330_ID,PATIENTS_ID,
DATE_CONSULTATION,
MOTCONSU_ID,
DATA_NAZNAHENIQ
,LEHAHIJ_VRAH,DEJSTVUYHIJ
)
values(@DATA_ID,@PATIENTS_ID
,@DATE_CONSULTATION
,@MOTCONSU_ID,@DATE_CONSULTATION
,@LEHAHIJ_VRAH,0
)

--select * from DATA_DOCTOR_IN_CHARGE where MOTCONSU_ID=@MOTCONSU_ID
end
else
	select @PATIENTS_ID,'DATA_DOCTOR_IN_CHARGE exists'

----------------------------------------------
      FETCH NEXT FROM Cur into @PATIENTS_ID
   END;
CLOSE Cur;
DEALLOCATE Cur;

		
